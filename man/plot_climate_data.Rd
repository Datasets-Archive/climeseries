% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot-series.R
\name{plot_climate_data}
\alias{plot_climate_data}
\title{Plot Climatological Time Series}
\usage{
plot_climate_data(x, series, start = NULL, end = NULL, ma = NULL,
  baseline = NULL, yearly = FALSE, plot_type = c("single",
  "multiple"), type = "l", xlab = "Year", ylab = NULL, unit = NULL,
  main = NULL, col = NULL, col_fun = RColorBrewer::brewer.pal,
  col_fun... = list(name = "Paired"), alpha = 0.5, lwd = 2,
  add = FALSE, conf_int = FALSE, ci_alpha = 0.3, trend = FALSE,
  trend_legend_inset = c(0.2, 0.2), loess = FALSE, loess... = list(),
  get_x_axis_ticks... = list(), segmented = FALSE,
  segmented... = list(), plot.segmented... = list(),
  mark_segments = FALSE, vline... = list(),
  make_standardized_plot_filename... = list(), start_callback = NULL,
  end_callback = NULL, save_png = FALSE, save_png_dir,
  png... = list(), ...)
}
\arguments{
\item{x}{A data set (down)loaded by function \code{\link{get_climate_data}}.}

\item{series}{A vector containing the column names of the climate series to be plotted. If \code{NULL}, all the series in \code{x} are plotted.}

\item{start, end}{Integer values of the starting and ending years of the plot, respectively; if either is given as \code{NULL}, the minimum or maximum date in \code{x} is used instead.}

\item{ma}{The size of the \code{ma}-month moving average for smoothing the climate series.}

\item{baseline}{An integer year or, more typically, range of years on which the climate-series anomalies will be centered. If \code{NULL}, no baseline centering is done, and the "baseline" attribute of \code{x} (if it exists) is used instead.}

\item{plot_type}{Passed to \code{\link[stats]{plot.ts}}.}

\item{type}{What type of plot should be drawn; see \code{?plot} for details.}

\item{col}{A vector of colors, each for plotting a member of \code{series}, which is passed to \code{\link[stats]{plot.ts}} and \code{\link[graphics]{legend}}.}

\item{col_fun}{If \code{col = NULL}, a color palette for \code{series} is generated from the function value of \code{col_fun}.}

\item{col_fun...}{Takes a list of arguments to be passed to function \code{col_fun()}, possibly overriding default values.}

\item{alpha}{Sets the color transparency of the climate series to a new level in [0, 1]. If \code{alpha} is \code{NA}, existing alpha values are preserved.}

\item{lwd}{A vector of line widths, each for plotting a member of \code{series}, which is passed to \code{\link[stats]{plot.ts}}.}

\item{conf_int}{Logical; if \code{TRUE}, plot 95\% confidence intervals for those series with CI data.}

\item{ci_alpha}{Sets the color transparency of the temperature-series CIs to a new level in [0, 1]. If \code{ci_alpha} is \code{NA}, existing alpha values are preserved.}

\item{...}{Passed to \code{\link[stats]{plot.ts}}.}

\item{omit_series}{A vector containing the column names of the climate series NOT to be plotted if \code{series = NULL}. This has been added to leave out the Keeling Curve data, but it could later include other regularly updated time-series data, related to climate, which wouldn't normally be plotted in the same window.}
}
\description{
Readily displays annotated climate time series on a common plot with many configurable options.
}
\examples{
\dontrun{
inst <- get_climate_data(download=FALSE, baseline=TRUE)

series <- c("GISTEMP Global", "NCEI Global", "HadCRUT4 Global", "Cowtan & Way Krig. Global", "BEST Global (Water Ice Temp.)", "JMA Global", "RSS TLT 3.3 -70.0/82.5", "UAH TLT 6.0 Global", "RATPAC-A 850-300 mb Global")
plot_climate_data(inst, series=series, 1880, ma=12, lwd=2)

########################################
## Plot instrumental series with 95\% confidence intervals.
########################################

series <- c("Cowtan & Way Krig. Global", "HadCRUT4 Global")
plot_climate_data(inst, series=series, 1880, ma=12, lwd=2, conf_int=TRUE)

########################################
## Plot instrumental series and trend line.
########################################

series <- c("GISTEMP Global", "NCEI Global", "HadCRUT4 Global", "RSS TLT 3.3 -70.0/82.5", "UAH TLT 6.0 Global")
plot_climate_data(inst, series=series, 1979, ma=12, lwd=2, show_trend=TRUE)

########################################
## Plot piecewise linear trends based on changepoint analysis (similar to Cahill et al. 2015, dx.doi.org/10.1088/1748-9326/10/8/084002).
########################################

## Prepare trend data.
baseline <- TRUE
d <- get_climate_data(download=FALSE, baseline=baseline)
m <- list()
m$series <- c("GISTEMP Global", "NCEI Global", "HadCRUT4 Global")
m$range <- list(start=1880, end=NULL)
m$col <- suppressWarnings(brewer.pal(length(m$series),"Paired"))
length(m$col) <- length(m$series); names(m$col) <- m$series
m$data <- d[d$year >= ifelse(!is.null(m$range$start), m$range$start, -Inf) & d$year <= ifelse(!is.null(m$range$end), m$range$end, Inf), ]
for (s in m$series) {
  m[[s]]$lm <- lm(eval(substitute(b ~ yr_part, list(b=as.symbol(s)))), data=m$data)
  summary(m[[s]]$lm)
  m[[s]]$warming <- coef(m[[s]]$lm)[2L] * diff(range(m[[s]]$lm$model[, 2L]))
  m[[s]]$rate <- coef(m[[s]]$lm)[2L] * 10
  m[[s]]$rateText <- eval(substitute(expression(paste(Delta, "T = ", r, phantom(l) * degree, "C/dec.", sep="")), list(r=sprintf(m[[s]]$rate, fmt="\%+1.3f"))))
  m[[s]]$col <- m$col[s]
}
## Plot series.
plot_climate_data(d, m$series, m$range$start, m$range$end, ma=12, lwd=2, col=m$col, baseline=baseline)
## Create changepoint model and plot results.
library(segmented)
changepoints <- 3L
for (s in m$series) {
  sm <- segmented::segmented(m[[s]]$lm, ~ yr_part, NA, seg.control(stop.if.error=TRUE, K=changepoints))
  print(sm)
  plot(sm, add=TRUE, lwd=2, col=m[[s]]$col, rug=FALSE)
}
}

}
